(ns sample.fab
  "Faithful port of https://docs.flutter.dev/cookbook/effects/expandable-fab#interactive-example"
  (:require
   ["package:flutter/material.dart" :as m]
   ["dart:math" :as math]
   [cljd.flutter :as f]))

;; https://docs.flutter.dev/cookbook/effects/expandable-fab#interactive-example

(defn fake-item [is-big]
  (m/Container
    .margin (m/EdgeInsets.symmetric .vertical 8.0 .horizontal 24.0)
    .height (if is-big 128.0 36.0)
    .decoration
    (m/BoxDecoration
      .borderRadius (-> 8.0 m/Radius.circular m/BorderRadius.all)
      .color m/Colors.grey.shade300)))

(def action-titles ["Create Post" "Upload Photo" "Upload Video"])

(defn show-action [ctx i]
  (m/showDialog
   .context ctx
   .builder (f/build
              :get [m/Navigator]
              (m/AlertDialog
               .content (m/Text (action-titles i))
               .actions [(m/TextButton
                          .onPressed #(.pop navigator)
                          .child (m/Text "CLOSE"))]))))

(defn action-button [& {:keys [on-pressed icon]}]
  (f/widget
    :get {{{:flds [secondary onSecondary]} .-colorScheme} m/Theme}
    (m/Material
      .shape (m/CircleBorder)
      .clipBehavior m/Clip.antiAlias
      .color secondary
      .elevation 4.0)
    (m/IconButton
      .onPressed on-pressed
      .icon icon
      .color onSecondary)))

(defn expanding-action-button
  [& {:keys [direction-degrees max-distance ^#/(m/Animation double) progress child]}]
  (f/widget
    :watch [v progress]
    :let [{:flds [dx dy]} (m/Offset.fromDirection
                            (* direction-degrees (/ math/pi 180.0))
                            (* v max-distance))]
    (m/Positioned .right (+ 4.0 dx) .bottom (+ 4.0 dy))
    (m/Transform.rotate .angle (* (- 1.0 v) math/pi 0.5))
    (m/Opacity .opacity v)
    child))

(defn expandable-fab [& {:keys [distance children]}]
  (f/widget
   :let [open-state (atom false)]
   :vsync vsync
   :managed [controller (m/AnimationController
                          .value 0.0
                          .duration (dart:core/Duration .milliseconds 250)
                          .vsync vsync)
             expand-animation (m/CurvedAnimation
                                .curve m/Curves.fastOutSlowIn
                                .reverseCurve m/Curves.easeOutQuad
                                .parent controller)]
   :let [toggle #(if (swap! open-state not)
                   (.forward controller)
                   (.reverse controller))
         tap-to-close-fab
         (f/widget
           (m/SizedBox
             .width 56.0
             .height 56.0)
           m/Center
           (m/Material
             .shape (m/CircleBorder)
             .clipBehavior m/Clip.antiAlias
             .elevation 4.0)
           (m/InkWell .onTap toggle)
           (m/Padding .padding (m/EdgeInsets.all 8.0))
           :get {{:flds [primaryColor]} m/Theme}
           (m/Icon m/Icons.close .color primaryColor))
         tap-to-open-fab
         (f/widget
           :watch [is-open open-state]
           (m/IgnorePointer .ignoring is-open)
           :let [scaling (if is-open 0.7 1.0)]
           (m/AnimatedContainer
             .transformAlignment m/Alignment.center
             .transform (m.Matrix4/diagonal3Values scaling scaling 1.0)
             .duration (dart:core/Duration .milliseconds 250)
           .curve (m/Interval 0.0 0.5 .curve m/Curves.easeOut))
           (m/AnimatedOpacity
             .opacity (if is-open 0.0 1.0)
             .curve (m/Interval 0.25 1.0 .curve m/Curves.easeInOut)
             .duration (dart:core/Duration .milliseconds 250))
           (m/FloatingActionButton .onPressed toggle)
           (m/Icon m/Icons.create))
         step (/ 90.0 (dec (count children)))]
   m/SizedBox.expand
   (m/Stack
    .alignment m/Alignment.bottomRight
    .clipBehavior m/Clip.none
    .children (concat [tap-to-close-fab]
                (map-indexed
                  (fn [i child]
                    (expanding-action-button
                      :direction-degrees (* i step)
                      :max-distance distance
                      :progress expand-animation
                      :child child))
                  children)
                [tap-to-open-fab]))))

(def example-expandable-fab
  (f/widget
   :context ctx
   (m/Scaffold
    .appBar (m/AppBar .title (m/Text "Expandable Fab"))
    .body (m/ListView.builder
           .padding (m/EdgeInsets.symmetric .vertical 8.0)
           .itemCount 25
           .itemBuilder (f/build [i] (fake-item (odd? i))))
    .floatingActionButton
    (expandable-fab
     :distance 112.0
     :children
     [(action-button :on-pressed #(show-action ctx 0)
        :icon (m/Icon m/Icons.format_size))
      (action-button :on-pressed #(show-action ctx 1)
        :icon (m/Icon m/Icons.insert_photo))
      (action-button :on-pressed #(show-action ctx 2)
        :icon (m/Icon m/Icons.videocam))]))))

(defn main []
  (f/run (m/MaterialApp .home example-expandable-fab)))
